{
  "graph": {
    "nodes": {
      "@./web-e2e": {
        "name": "@./web-e2e",
        "type": "lib",
        "data": {
          "root": "apps/frontend-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/frontend-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/**/*.ts",
                "{projectRoot}/**/*.js",
                "{projectRoot}/playwright.config.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/test-output",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.mjs",
                "!{projectRoot}/eslint.config.cjs",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/playwright/**/*.d.ts",
                "{projectRoot}/out-tsc/playwright/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "options": {
                "cwd": "apps/frontend-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["@./web"],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/frontend-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/frontend-e2e/playwright-report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/frontend-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "../../dist/.playwright/apps/frontend-e2e/playwright-report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "../../dist/.playwright/apps/frontend-e2e/playwright-report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=../../dist/.playwright/apps/frontend-e2e/test-output/src-example-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["@./web"],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/frontend-e2e/test-output/src-example-spec-ts",
                "{workspaceRoot}/dist/.playwright/apps/frontend-e2e/playwright-report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/frontend-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/frontend-e2e/playwright-report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci--src/example.spec.ts", "e2e-ci"]
            }
          },
          "name": "@./web-e2e",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@./web": {
        "name": "@./web",
        "type": "app",
        "data": {
          "root": "apps/frontend",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": "apps/frontend",
                "command": "tsc --noEmit -p tsconfig.app.json"
              },
              "metadata": {
                "technologies": ["typescript", "typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc -p tsconfig.app.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/frontend",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "apps/frontend",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": ["{projectRoot}/test-output/vitest/coverage"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "build": {
              "options": {
                "cwd": "apps/frontend",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "npx vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/frontend",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "npx vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": ["build"],
              "options": {
                "cwd": "apps/frontend",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "npx vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @./web --includeDependentProjects -- npx nx build-deps @./web"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@./web",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@./api": {
        "name": "@./api",
        "type": "app",
        "data": {
          "root": "apps/backend",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/backend",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/dist",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.cjs",
                "!{projectRoot}/eslint.config.mjs",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/backend",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/backend",
                "args": ["--node-env=production"],
                "command": "webpack-cli build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["webpack-cli"]
                }
              ],
              "outputs": ["{workspaceRoot}/apps/backend/dist"],
              "metadata": {
                "technologies": ["webpack"],
                "description": "Runs Webpack build",
                "help": {
                  "command": "npx webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": ["--profile"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/backend",
                "args": ["--node-env=development"],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/backend",
                "args": ["--node-env=production"],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": ["build"],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @./api --includeDependentProjects -- npx nx build-deps @./api"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@./api",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@solarihub/types": {
        "name": "@solarihub/types",
        "type": "lib",
        "data": {
          "root": "libs/types",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "options": {
                "cwd": "libs/types",
                "command": "tsc --noEmit -p tsconfig.lib.json"
              },
              "metadata": {
                "technologies": ["typescript", "typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc -p tsconfig.lib.json --help",
                  "example": {
                    "options": {
                      "noEmit": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": ["^build"],
              "options": {
                "cwd": "libs/types",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/vite.config.ts",
                "!{projectRoot}/vite.config.mts",
                "!{projectRoot}/vitest.config.ts",
                "!{projectRoot}/vitest.config.mts",
                "!{projectRoot}/src/**/*.test.ts",
                "!{projectRoot}/src/**/*.spec.ts",
                "!{projectRoot}/src/**/*.test.tsx",
                "!{projectRoot}/src/**/*.spec.tsx",
                "!{projectRoot}/src/**/*.test.js",
                "!{projectRoot}/src/**/*.spec.js",
                "!{projectRoot}/src/**/*.test.jsx",
                "!{projectRoot}/src/**/*.spec.jsx",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @solarihub/types --includeDependentProjects -- npx nx build-deps @solarihub/types"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "libs/types",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": ["{projectRoot}/test-output/vitest/coverage"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "metadata": {},
          "name": "@solarihub/types",
          "implicitDependencies": [],
          "tags": []
        }
      }
    },
    "dependencies": {
      "@./web-e2e": [],
      "@./web": [],
      "@./api": [],
      "@solarihub/types": []
    }
  }
}
